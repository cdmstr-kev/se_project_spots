!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=(e,t,r)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.remove(r.inputErrorClass),o.textContent="",o.classList.remove(r.errorClass)},r=(e,t,r)=>{(e=>e.some(e=>!e.validity.valid))(e)?o(t,r):(t.classList.remove(r.inactiveButtonClass),t.disabled=!1)},o=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0},n=(e,o,n)=>{o.forEach(r=>{t(e,r,n)});const a=e.querySelector(n.submitButtonSelector);r(o,a,n)};function a(e,t,r="Save",o="Saving..."){t.textContent=e?o:r}function s(e,t,r="Saving..."){t.preventDefault();const o=t.submitter,n=o.textContent;a(!0,o,n,r),e().then(()=>{t.target.reset()}).catch(e=>{console.error("Error updating user info:",e)}).finally(()=>{a(!1,o,n)})}const i=document.getElementById("logo"),c=document.getElementById("profile-picture");i.src="d3610e9c6dce3cb370d8.svg";const l=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}getAppInfo(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}getUserInfo(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo({name:e,about:t}){return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})})}editUserAvatar({avatar:e}){return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}editLikeStatus({cardId:e,isLiked:t}){return console.log(t),this._request(`${this._baseUrl}/cards/${e}/likes`,{method:t?"PUT":"DELETE",headers:this._headers})}deleteCard(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}addCard({name:e,link:t}){return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})})}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"8882c22c-2148-4e06-953e-3bab8baa4120","Content-Type":"application/json"}}),d=document.querySelector(".profile__edit-btn"),u=document.querySelector("#edit-profile-modal"),m=document.querySelector(".profile__name"),_=document.querySelector(".profile__description"),h=document.querySelector(".modal__form"),f=u.querySelector("#profile-name"),v=u.querySelector("#description"),y=document.querySelector("#profile-picture-modal"),p=document.querySelector(".profile__avatar-btn"),S=y.querySelector(".modal__form"),q=y.querySelector("#profile-picture-input"),b=document.querySelector("#delete-card-modal"),E=b.querySelector(".modal__form"),L=b.querySelector(".modal__button_type_cancel"),g=document.querySelector(".profile__new-post-btn"),C=document.querySelector("#new-post-modal"),k=C.querySelector(".modal__button"),U=document.querySelectorAll(".modal__close-btn"),A=document.querySelectorAll(".modal"),x=C.querySelector(".modal__form"),I=C.querySelector("#caption"),$=C.querySelector("#image-link"),B=document.querySelector(".cards__list"),T=document.querySelector("#card-template").content.querySelector(".card"),w=document.querySelector("#preview-modal"),P=w.querySelector(".modal__image"),D=w.querySelector(".modal__caption");let N,O;function j(e){e.classList.add("modal_is-open"),document.addEventListener("keydown",H)}function J(e){e.classList.remove("modal_is-open"),document.removeEventListener("keydown",H)}function H(e){"Escape"===e.key&&A.forEach(e=>{e.classList.contains("modal_is-open")&&J(e)})}function R(e,t="prepend"){const r=function(e){const t=T.cloneNode(!0),r=t.querySelector(".card__description"),o=t.querySelector(".card__image"),n=t.querySelector(".card__icon"),a=t.querySelector(".card__delete-btn");return 1==e.isLiked&&n.classList.add("card__icon_active"),o.src=e.link,o.alt=e.name,r.textContent=e.name,n.addEventListener("click",t=>function(e,t){e.preventDefault();const r=e.target;l.editLikeStatus({cardId:t,isLiked:!r.classList.contains("card__icon_active")}).then(()=>{r.classList.toggle("card__icon_active")}).catch(e=>{console.error("Error editing like status:",e)})}(t,e._id)),a.addEventListener("click",()=>function(e,t){N=e,O=t._id,j(b)}(t,e)),o.addEventListener("click",()=>{!function(e){P.src=e.link,P.alt=e.name,D.textContent=e.name,j(w)}(e)}),t}(e);B[t](r)}var z;U.forEach(e=>{const t=e.closest(".modal");e.addEventListener("click",()=>J(t))}),A.forEach(e=>{e.addEventListener("click",t=>{t.target===e&&J(e)})}),d.addEventListener("click",function(){f.value=m.textContent,v.value=_.textContent,n(u,[f,v],e),j(u)}),p.addEventListener("click",function(){j(y)}),g.addEventListener("click",function(){j(C)}),S.addEventListener("submit",function(t){s(()=>l.editUserAvatar({avatar:q.value}).then(r=>{c.src=r.avatar,J(y),o(t.submitter,e)}),t)}),h.addEventListener("submit",function(e){s(()=>l.editUserInfo({name:f.value,about:v.value}).then(e=>{m.textContent=e.name,_.textContent=e.about,J(u)}),e)}),E.addEventListener("submit",function(e){s(()=>l.deleteCard(O).then(()=>{N.remove(),J(b)}),e,"Deleting...")}),x.addEventListener("submit",function(t){const r={name:I.value,link:$.value};s(()=>l.addCard(r).then(r=>{R(r),J(C),t.target.reset(),o(k,e);const a=Array.from(t.target.querySelectorAll(e.inputSelector));n(t.target,a,e)}),t)}),L.addEventListener("click",()=>{J(b)}),l.getAppInfo().then(([e,t])=>{t.forEach(function(e){R(e,"append")}),m.textContent=e.name,_.textContent=e.about,c.src=e.avatar}).catch(e=>{console.error("Error fetching initial cards:",e)}),z=e,document.querySelectorAll(z.formSelector).forEach(e=>{((e,o)=>{const n=Array.from(e.querySelectorAll(o.inputSelector)),a=e.querySelector(o.submitButtonSelector);r(n,a,o),n.forEach(s=>{s.addEventListener("input",i=>{((e,r,o)=>{r.validity.valid?t(e,r,o):((e,t,r,o)=>{const n=e.querySelector(`#${t.id}-error`);t.classList.add(o.inputErrorClass),n.textContent=r,n.classList.add(o.errorClass)})(e,r,r.validationMessage,o)})(e,s,o),r(n,a,o)})})})(e,z)})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,